# Get the aliases and functions
if [ -f ~/.bashrc ]; then
	. ~/.bashrc
fi

export EDITOR="vim"
export MAVREPO="https://cmserv.msfc.nasa.gov/svn/maveric/maveric_repository"

#=============== OPTIONS ================
# Append to bash history instead of overwrite:
shopt -s histappend;

# Autocorrect typos in path names
shopt -s cdspell

#=============== ALIASES =================
# List maveric tags
alias listmavtags="svn list https://cmserv.msfc.nasa.gov/svn/maveric/maveric_repository/tags/"

# Always color and add line numbers to grep output
alias grep="grep --line-number --color=auto"

# Set umask such that mctool is happy
alias mctool="umask 0022 && mctool && umask 0077"

#=============== FUNCTIONS =================
function getmavtag {
    local PREVDIR=$PWD
    svn co $MAVREPO/tags/$1 $2
    printf "Generating ctags tagfile...\n"
    cd $2
    ctags -R
    cd $PREVDIR
}

function collate {
    ################################
    # Collates single-line output files of a given base file name
    #
    # INPUTS:
    #  - base file name (do not include "asc" or "header" extensions)
    #  - first case number to collate
    #  - last case number to collate
    #
    # NOTES:
    #  - assumes header file in same directory with data files
    #  - puts the collated file in the working directory, so be sure
    #    to run from the desired directory
    ################################
    local FPATH=$1 # base file name
    local FIRST=$2 # first case number to collate
    local LAST=$3  # last case number to collate

    case "$1" in
        -h)               # header present in files
        local FPATH=$2    # base file name
        local FIRST=$3    # first case number to collate
        local LAST=$4     # last case number to collate
        local TAIL="true" # use tail instead of head if header present
        ;;
    esac

    # get parent dir
    local FNAME="$(basename $FPATH).asc"

    head --lines=1 --quiet "${FPATH}.header" > $FNAME
    echo "Collating single-line files for $FNAME, cases $FIRST to $LAST"
    for ii in $(seq $FIRST $LAST);
    do
        if [ "$TAIL" = "true" ]; then
            tail --lines=1 --quiet "${FPATH}.asc.${ii}" >> $FNAME
        else
            head --lines=1 --quiet "${FPATH}.asc.${ii}" >> $FNAME
        fi
    done
}
